@using ESOA.Model
@model AgentListing

@using (Html.BeginForm("UpdateCustomer", "Customer", null, FormMethod.Post, null, new { id = "frmCustomerDtl" }))
{ 
    <div class="modal-header">
        <h5 class="modal-title" id="modal-xl-Label">Customer @if (Model != null) { <label> - Edit</label> } else{ <label> - Add New</label> }</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
    </div>
    <div class="modal-body"> 
        <!-- body -->
        <div class="row g-2 gy-2" id="customerDetailContainer">
            @Html.HiddenFor(c => c.Id)  
            <div class="col-md-12">
                <div class="form-floating">
                    @Html.TextBoxFor(m => m.Name, new { @class = "form-control required-1", @placeholder = "name", @required = "required" })
                    <label for="">Name</label>
                </div>
            </div>
            <div class="col-md-12">
                <div class="form-floating">
                    @Html.TextBoxFor(m => m.LegalEntityName, new { @class = "form-control required-2", @placeholder = "legal entity name", @required = "required" })
                    <label for="">Legal Entity Name</label>
                </div>
            </div>
            <div class="col-md-12">
                <div class="form-floating">
                    @Html.TextBoxFor(m => m.Tin, new { @class = "form-control required-3", @placeholder = "TIN", @required = "required" })
                    <label for="">TIN</label>
                </div>
            </div>
            <div class="col-md-12">
                <div class="form-floating">
                    @Html.TextBoxFor(m => m.Address, new { @class = "form-control required-4", @placeholder = "Address", @required = "required" })
                    <label for="">Address</label>
                </div>
            </div>
            <div class="col-md-12">
                <div class="form-floating">
                    @Html.TextBoxFor(m => m.SalesExec_LBC, new { @class = "form-control required-5", @placeholder = "sales exec LBC", @required = "required" })
                    <label for="">Sales Exec (LBC)</label>
                </div>
            </div>
            <div class="col-md-12">
                <div class="form-floating">
                    @Html.TextBoxFor(m => m.ApprovedAFC, new { @class = "form-control required-6", @placeholder = "approved AFC", @type = "number", @min = "0", @required = "required" })
                    <label for="">Approved AFC</label>
                </div>
            </div>
            @* <div class="col-md-12">
                <div class="form-floating">
                    @Html.HiddenFor(c => c.SOAFormatId)
                    <input class="form-control required-7" id="selectedInput-soaFormat" list="datalistOptions-soaFormat" placeholder="please select SOA Template...">
                    <label for="">SOA Template</label>
                </div>
                <datalist id="datalistOptions-soaFormat">
                    @foreach (NameValuePair item in ViewBag.SOAFormatList)
                    {
                        <option data-value="@item.Value" value="@item.Name"></option>
                    }
                </datalist>
            </div> *@
            <div class="col-md-12">
                <div class="form-floating">
                    @Html.DropDownListFor(m => m.SOAFormatId, new SelectList(ViewBag.SOAFormatList, "Value", "Name"), new { @class = "form-select  required-7", @required = "required" })
                    <label for="floatingSelectGridEmploymentType">SOA Template</label>
                </div>
            </div>
            @* <div class="col-md-12">
                <div class="form-floating">
                    @Html.HiddenFor(c => c.RateCardId)
                    <input class="form-control required-8" id="selectedInput-rateCard" list="datalistOptions-rateCard" placeholder="please select Rate Card...">
                    <label for="">Rate Card</label>
                </div>
                <datalist id="datalistOptions-rateCard">
                    @foreach (NameValuePair item in ViewBag.RateList)
                    {
                        <option data-value="@item.Value" value="@item.Name"></option>
                    }
                </datalist>
            </div> *@
            <div class="col-md-12">
                <div class="form-floating">
                    @Html.DropDownListFor(m => m.RateCardId, new SelectList(ViewBag.RateList, "Value", "Name"), new { @class = "form-select  required-8", @required = "required" })
                    <label for="floatingSelectGridEmploymentType">Rate Card</label>
                </div>
            </div>
            <div class="col-md-12">
                <div class="form-floating">
                    @Html.DropDownListFor(m => m.Domestic_Intl, new SelectList(ViewBag.Domestic_IntlList, "Value", "Name"), new { @class = "form-select required-9", @required = "required" })
                    <label>Domestic/Intl</label>
                </div>
            </div>
            <div class="col-md-12">
                <div class="form-floating">
                    @Html.TextBoxFor(m => m.Country, new { @class = "form-control required-10", @placeholder = "country", @required = "required" })
                    <label for="">Country</label>
                </div>
            </div>
            <div class="col-md-12">
                <div class="form-floating">
                    @Html.DropDownListFor(m => m.TransmissionMode, new SelectList(ViewBag.TransmissionModeList, "Value", "Name"), new { @class = "form-select required-11", @required = "required" })
                    <label>Transmission Mode</label>
                </div>
            </div>
            <div class="col-md-12">
                <div class="form-floating">
                    @Html.TextBoxFor(m => m.OfficeCode, new { @class = "form-control required-12", @placeholder = "office code", @required = "required" })
                    <label for="">Office Code</label>
                </div>
            </div>
            <div class="col-md-12">
                <div class="form-floating">
                    @Html.TextBoxFor(m => m.Area, new { @class = "form-control required-13", @placeholder = "area", @required = "required" })
                    <label for="">Area</label>
                </div>
            </div>
            <div class="col-md-12">
                <div class="form-floating">
                    @Html.TextBoxFor(m => m.SAPCustomerId, new { @class = "form-control required-14", @placeholder = "SAP customer id", @type = "number", @min = "0", @required = "required" })
                    <label for="">SAP Customer ID</label>
                </div>
            </div>
            <div class="col-md-12">
                <div class="form-floating">
                    @Html.TextBoxFor(m => m.SAPVendorId_IPP, new { @class = "form-control required-15", @placeholder = "SAP vendor id - ipp", @type = "number", @min = "0", @required = "required" })
                    <label for="">SAP Vendor ID - IPP</label>
                </div>
            </div>
            <div class="col-md-12">
                <div class="form-floating">
                    @Html.TextBoxFor(m => m.SAPVendorId_PP_SC, new { @class = "form-control required-16", @placeholder = "SAP vendor id pp/sc", @type = "number", @min = "0", @required = "required" })
                    <label for="">SAP Vendor ID - PP/SC</label>
                </div>
            </div>
            <div class="col-md-12">
                <div class="form-floating">
                    @Html.TextBoxFor(m => m.SAPVendorId_RTA, new { @class = "form-control required-17", @placeholder = "SAP vendor id RTA", @type = "number", @min = "0", @required = "required" })
                    <label for="">SAP Vendor ID - RTA</label>
                </div>
            </div>
            <div class="col-md-12">
                <div class="form-floating">
                    @Html.TextBoxFor(m => m.SAPVendorId_SNS, new { @class = "form-control required-18", @placeholder = "SAP vendor id SNS", @type = "number", @min = "0", @required = "required" })
                    <label for="">SAP Vendor ID - SNS</label>
                </div>
            </div>
            <div class="col-md-12">
                <div class="form-floating">
                    @Html.TextBoxFor(m => m.SAPVendorId_IPPX, new { @class = "form-control required-19", @placeholder = "SAP vendor IPPX", @type = "number", @min = "0", @required = "required" })
                    <label for="">SAP Vendor ID - IPPX</label>
                </div>
            </div>
            <div class="col-md-12">
                <div class="form-floating">
                    @Html.DropDownListFor(m => m.PaymentCurrency, new SelectList(ViewBag.PaymentCurrencyList, "Value", "Name"), new { @class = "form-control required-20", @required = "required" })
                    <label>Payment Currency</label>
                </div>
            </div>
            <div class="col-md-12">
                <div class="form-floating">
                    @Html.DropDownListFor(m => m.SFModeOfSettlement, new SelectList(ViewBag.SFModeOfSettlementList, "Value", "Name"), new { @class = "form-select required-21", @required = "required" })
                    <label>SF Mode Of Settlement</label>
                </div>
            </div>
            <div class="col-md-12">
                <div class="form-floating">
                    @Html.DropDownListFor(m => m.WithHoldingTax, new SelectList(ViewBag.WithholdingTaxList, "Value", "Name"), new { @class = "form-select required-22", @required = "required" })
                    <label>Withholding Tax</label>
                </div>
            </div>
            <div class="col-md-12">
                <div class="form-floating">
                    @Html.DropDownListFor(m => m.VatStatus, new SelectList(ViewBag.VatStatusList, "Value", "Name"), new { @class = "form-select required-23", @required = "required" })
                    <label>VAT Status</label>
                </div>
            </div>
            <div class="col-md-12">
                <div class="form-floating">
                    @Html.DropDownListFor(m => m.Status, new SelectList(ViewBag.StatusList, "Value", "Name"), new { @class = "form-select required-24", @required = "required" })
                    <label>Status</label>
                </div>
            </div>

            <div class="col-md-12">
                <div class="form-floating">
                    @Html.HiddenFor(m => m.DepositoryBankAccountId)
                    <input class="form-control required-8" required="required" id="selectedInput-depositoryBankAccount" list="datalistOptions-depositoryBankAccount" placeholder="please select account no...">
                    <label for="">Depository Bank Account</label>
                </div>
                <datalist id="datalistOptions-depositoryBankAccount">
                    @foreach (NameValuePair item in ViewBag.DepositoryBankAccountList)
                    {
                        <option data-value="@item.Value" value="@item.Name"></option>
                    }
                </datalist>
            </div>

            <div class="col-md-12">
                <div class="form-floating">
                    @Html.TextBoxFor(m => m.BeginningBalance, new { @class = "form-control required-25", @placeholder = "", @step = "any", @required = "required" })
                    <label for="">Beginning Balance</label>
                </div>
            </div>

        </div>  
        <!-- ---- --> 
    </div>
    <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
        @if (@Model != null)
        {
            <button type="submit" class="btn btn-primary" id="btnSave">Save</button>
        }
        else
        {
            <button type="submit" class="btn btn-primary" id="btnAdd"> Add</button>
        }
        
    </div>
}

@* <link href="~/css/_customValidation.css" rel="stylesheet" /> *@
<script src="~/js/_customValidation.js" type="text/javascript"></script>

<script type="text/javascript">
    Inputmask({
        alias: "currency",
        prefix: "",
        groupSeparator: ",",
        digits: 2,
        digitsOptional: false,
        autoGroup: true,
        removeMaskOnSubmit: true
    }).mask("#BeginningBalance");

    $(document).ready(function () 
    {
        //TIN Field format
        $('#Tin').mask('000-000-000-00000');

        //clear all dropdownlist selection
        if ($('#Id').val() == '') {
            document.getElementById("Domestic_Intl").selectedIndex = "-1";
            document.getElementById("TransmissionMode").selectedIndex = "-1";
            document.getElementById("PaymentCurrency").selectedIndex = "-1";
            document.getElementById("SFModeOfSettlement").selectedIndex = "-1";
            document.getElementById("WithHoldingTax").selectedIndex = "-1";
            document.getElementById("VatStatus").selectedIndex = "-1";
            document.getElementById("Status").selectedIndex = "-1";
            document.getElementById("SOAFormatId").selectedIndex = "-1";
            document.getElementById("RateCardId").selectedIndex = "-1";
        } 

        $('#selectedInput-soaFormat').change(function (evt) {
            var value = $('#selectedInput-soaFormat').val();
            $('#SOAFormatId').val($('#datalistOptions-soaFormat [value="' + value + '"]').data('value'));
        });

        $('#selectedInput-rateCard').change(function (evt) {
            var value = $('#selectedInput-rateCard').val();
            $('#RateCardId').val($('#datalistOptions-rateCard [value="' + value + '"]').data('value'));
        });

        $('#btnSave').click(function (evt) 
        {
            evt.preventDefault();
            //custom form validation
            validateForm(24);

            if (isFormValidated) {
                //alert('all input was good');

                //execute modulespecificvalidation
                if (invalidInputMessage() != '') {
                    swal.fire("Error", invalidInputMessage(), "error");
                }
                else {
                    saveCustomerDetails(evt);
                } 
            } else {
                swal.fire("Error", "Please check fields for proper input!!!.", "error");
            }
        });
        $('#btnAdd').click(function (evt) 
        {
            evt.preventDefault();
            //custom form validation - if has value or not
            validateForm(24); 

            if (isFormValidated) {
                //alert('all input was good');

                //execute modulespecificvalidation
                if (invalidInputMessage() != '') {
                    swal.fire("Error", invalidInputMessage(), "error");
                }
                else {
                    AddNewCustomerDetails(evt);
                } 
            } 
            else {
                swal.fire("Error", "Please check fields for proper input!!!.", "error");
            }

            
        });

        $('#selectedInput-depositoryBankAccount').change(function (evt) {
            var value = $('#selectedInput-depositoryBankAccount').val();
            $('#DepositoryBankAccountId').val($('#datalistOptions-depositoryBankAccount [value="' + value + '"]').data('value'));
        });
        validateInputSelection('DepositoryBankAccount');

        LoadExistingESOADetails($('#DepositoryBankAccountId').val());
    });

    function LoadExistingESOADetails(DepositoryBankAccountId) {
        $.ajax({
            url: '/Admin/GetDepositoryBankAccount_No'
            , type: 'GET'
            , data: { depositoryBankAccountId: DepositoryBankAccountId }
            , contentType: 'application/json; charset=utf-8;'
            , success: function (response) {
                $('#selectedInput-depositoryBankAccount').val(response.accountNo);
            }
            , complete: function () {}
        });
    }

    function invalidInputMessage() {
        if ($('#Tin').val().length < 15) {
            return 'TIN should have atleast 12 digits.'; 
        } else {
            return '';
        }
    } 

</script>